name: Build and Release VSIX Extension

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build VSIX
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Restore NuGet packages
        run: nuget restore src/MahAppsIconPackPreview.sln

      - name: Build solution
        run: msbuild src/MahAppsIconPackPreview.sln /p:Configuration=Release

      - name: Find built VSIX
        id: find_vsix
        run: |
          $vsix = Get-ChildItem -Recurse -Filter *.vsix | Select-Object -First 1
          if (-not $vsix) {
            Write-Error "No VSIX file found after build."
            exit 1
          }
          echo "vsix_path=$($vsix.FullName)" >> $env:GITHUB_OUTPUT

      - name: Run Tests (if available)
        run: |
          vstest.console.exe $(Get-ChildItem -Recurse -Filter *Tests.dll | Select-Object -ExpandProperty FullName) `
            /Platform:x64 /Logger:trx
        continue-on-error: true

  release:
    name: Create GitHub Release
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore src/MahAppsIconPackPreview.sln

      - name: Build VSIX
        run: msbuild src/MahAppsIconPackPreview.sln /p:Configuration=Release

      - name: Find built VSIX
        id: find_vsix
        run: |
          $vsix = Get-ChildItem -Recurse -Filter *.vsix | Select-Object -First 1
          echo "vsix_path=$($vsix.FullName)" >> $env:GITHUB_OUTPUT

      - name: Upload GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ steps.find_vsix.outputs.vsix_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Visual Studio Marketplace
        run: |
          vsce publish --pat ${{ secrets.VSIX_PAT }} --packagePath "${{ steps.find_vsix.outputs.vsix_path }}"
        shell: bash